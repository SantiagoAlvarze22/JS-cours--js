{"version":3,"sources":["clean.js"],"names":["shoppingCart","product","quantity","allowedProducts","lisbon","others","checkCorrectAllowedProducts","cart","numAllowed","city","length","allowed","newCart","map","item","allowedShoppingCart","console","log","createOrderDescription","p","q","orderDescription"],"mappings":"AAAA,IAAMA,YAAY,GAAG,CACnB;AAAEC,EAAAA,OAAO,EAAE,OAAX;AAAoBC,EAAAA,QAAQ,EAAE;AAA9B,CADmB,EAEnB;AAAED,EAAAA,OAAO,EAAE,OAAX;AAAoBC,EAAAA,QAAQ,EAAE;AAA9B,CAFmB,EAGnB;AAAED,EAAAA,OAAO,EAAE,MAAX;AAAmBC,EAAAA,QAAQ,EAAE;AAA7B,CAHmB,EAInB;AAAED,EAAAA,OAAO,EAAE,OAAX;AAAoBC,EAAAA,QAAQ,EAAE;AAA9B,CAJmB,CAArB;AAOA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,MAAM,EAAE,CADc;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAxB;;AAKA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAUC,IAAV,EAAgBC,UAAhB,EAA4BC,IAA5B,EAAkC;AAAA;;AACpE,MAAI,CAACF,IAAI,CAACG,MAAV,EAAkB,OAAO,EAAP,CADkD,CAGpE;AACA;;AACA,MAAMC,OAAO,uBAAGH,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAGC,IAAH,CAAb,+DAAyBN,eAAe,CAACE,MAAtD;AAEA,MAAMO,OAAO,GAAGL,IAAI,CAACM,GAAL,CAAS,UAAAC,IAAI,EAAI;AAAA,QACvBb,OADuB,GACDa,IADC,CACvBb,OADuB;AAAA,QACdC,QADc,GACDY,IADC,CACdZ,QADc,EAE/B;;AACA,WAAO;AACLD,MAAAA,OAAO,EAAPA,OADK;AAELC,MAAAA,QAAQ,EAAEA,QAAQ,GAAGS,OAAX,GAAqBA,OAArB,GAA+BT;AAFpC,KAAP;AAID,GAPe,CAAhB;AASA,SAAOU,OAAP;AACD,CAjBD;;AAkBA,IAAMG,mBAAmB,GAAGT,2BAA2B,CACrDN,YADqD,EAErDG,eAFqD,EAGrD,QAHqD,CAAvD;AAKAa,OAAO,CAACC,GAAR,CAAYF,mBAAZ;;AAEA,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUX,IAAV,EAAgB;AAAA,eACTA,IAAI,CAAC,CAAD,CADK;AAAA,MAC5BY,CAD4B,UACrClB,OADqC;AAAA,MACfmB,CADe,UACzBlB,QADyB;AAG7C,8BAAqBkB,CAArB,cAA0BD,CAA1B,cAA+BZ,IAAI,CAACG,MAAL,GAAc,CAAd,GAAkB,QAAlB,GAA6B,GAA5D,EAH6C,CAK7C;AACA;AACA;AACA;AACA;AACD,CAVD;;AAYA,IAAMW,gBAAgB,GAAGH,sBAAsB,CAACH,mBAAD,CAA/C;AAEAC,OAAO,CAACC,GAAR,CAAYI,gBAAZ","file":"clean.55562fe9.js","sourceRoot":"..","sourcesContent":["const shoppingCart = [\n  { product: 'bread', quantity: 6 },\n  { product: 'pizza', quantity: 2 },\n  { product: 'milk', quantity: 4 },\n  { product: 'water', quantity: 10 },\n];\n\nconst allowedProducts = {\n  lisbon: 5,\n  others: 7,\n};\n\nconst checkCorrectAllowedProducts = function (cart, numAllowed, city) {\n  if (!cart.length) return [];\n\n  // const allowed = numAllowed[city] > 0 ? numAllowed[city] : numAllowed.others;\n  //if city doesn't exist it would return undefine, and if it returns undefined would be returning the allowedProducts.others\n  const allowed = numAllowed?.[city] ?? allowedProducts.others;\n\n  const newCart = cart.map(item => {\n    const { product, quantity } = item;\n    // console.log(product, quantity, allowed);\n    return {\n      product,\n      quantity: quantity > allowed ? allowed : quantity,\n    };\n  });\n\n  return newCart;\n};\nconst allowedShoppingCart = checkCorrectAllowedProducts(\n  shoppingCart,\n  allowedProducts,\n  'lisbon'\n);\nconsole.log(allowedShoppingCart);\n\nconst createOrderDescription = function (cart) {\n  const { product: p, quantity: q } = cart[0];\n\n  return `Order with ${q} ${p} ${cart.length > 1 ? 'etc...' : '.'}`;\n\n  // if (cart.length > 1) {\n  //   return `Order with  q  p  etc...`;\n  // } else {\n  //   return 'Order with ' + q + ' ' + p + '.';\n  // }\n};\n\nconst orderDescription = createOrderDescription(allowedShoppingCart);\n\nconsole.log(orderDescription);\n"]}